#!/usr/bin/env bash
set -e

# 1. Migra√ß√µes (aplica apenas pendentes)
echo "üîÑ Aplicando migrations..."
python manage.py migrate --noinput

# 2. Vari√°vel para o diret√≥rio de est√°ticos
STATIC_DIR="staticfiles"
# 2a. Arquivo de exemplo para testar exist√™ncia de est√°ticos do Admin
CHECK_FILE="$STATIC_DIR/admin/css/base.css"

# 3. Se o diret√≥rio n√£o existir, ou estiver vazio, ou faltar o arquivo CHECK_FILE, roda collectstatic
if [ ! -d "$STATIC_DIR" ] \
   || [ -z "$(ls -A -- "$STATIC_DIR")" ] \
   || [ ! -f "$CHECK_FILE" ]; then

  echo "üì¶ Coletando arquivos est√°ticos..."
  python manage.py collectstatic --noinput

else
  echo "‚úÖ Arquivos est√°ticos j√° coletados, pulando collectstatic."
fi

# 4. Criar superusu√°rio a partir das vari√°veis de ambiente
echo "üë§ Verificando superusu√°rio..."
python manage.py shell -c "
import os
from django.contrib.auth import get_user_model
User = get_user_model()
username = os.environ.get('DJANGO_SUPERUSER_USERNAME')
email = os.environ.get('DJANGO_SUPERUSER_EMAIL')
password = os.environ.get('DJANGO_SUPERUSER_PASSWORD')
if username and email and password:
    if not User.objects.filter(username=username).exists():
        User.objects.create_superuser(username=username, email=email, password=password)
        print(f'‚úÖ Superusu√°rio {username} criado com sucesso!')
    else:
        print(f'‚ÑπÔ∏è Superusu√°rio {username} j√° existe.')
else:
    print('‚ö†Ô∏è Vari√°veis de ambiente para superusu√°rio n√£o definidas.')
"

# 5. Inicia o Gunicorn na porta definida pelo Render
echo "üöÄ Iniciando Gunicorn..."
exec gunicorn core.wsgi:application --bind 0.0.0.0:$PORT